version: '4'

services:
  db:
    image: mysql:latest
    container_name: db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: db
      MYSQL_USER: user
      MYSQL_PASSWORD: user
    ports:
      - "3308:3306"
    networks:
      - mynet
    volumes:
      - ./db:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
  # server: 
  #   build:
  #     dockerfile: Dockerfile
  #     context: ./src/server
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/db
  #     - SPRING_DATASOURCE_USERNAME=root
  #     - SPRING_DATASOURCE_PASSWORD=root
  #     - SPRING_DATASOURCE_DRIVER-CLASS-NAME=com.mysql.cj.jdbc.Driver
  #     - SPRING_JPA_HIBERNATE_DDL-AUTO=update
  #   volumes:
  #     - ./src/server:/app
  #   networks:
  #     - mynet
  #   depends_on:
  #     db:
  #       condition: service_healthy

#   client:
#     build:
#       dockerfile: Dockerfile
#       context: ./src/client
#     ports:
#       - "3000:3000"
#     volumes:
#       - /app/node_modules
#       - ./src/client:/app
#     networks:
#       - mynet
#     depends_on:
#       - server

  sonarqube:
      image: sonarqube:latest
      hostname: sonarqube
      container_name: sonarqube
      depends_on:
        - db
      environment:
        SONAR_JDBC_URL: jdbc:postgresql://postgresql:5432/sonar
        SONAR_JDBC_USERNAME: sonar
        SONAR_JDBC_PASSWORD: sonar
      networks:
        - mynet
      volumes:
        - sonarqube_data:/opt/sonarqube/data
        - sonarqube_extensions:/opt/sonarqube/extensions
        - sonarqube_logs:/opt/sonarqube/logs
      ports:
        - "9000:9000"
  postgresql:
    image: postgres:latest
    hostname: postgresql
    container_name: postgresql
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    networks:
        - mynet
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data:

networks:
  mynet:
    driver: bridge  